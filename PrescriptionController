import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;
import org.springframework.validation.annotation.Validated;
import javax.validation.Valid;
import java.util.*;

@RestController
@RequestMapping("/prescriptions")
@Validated
public class PrescriptionController {

    private final PrescriptionRepository prescriptionRepository;
    private final TokenService tokenService; // Token validation Service

    @Autowired
    public PrescriptionController(PrescriptionRepository prescriptionRepository, TokenService tokenService) {
        this.prescriptionRepository = prescriptionRepository;
        this.tokenService = tokenService; // Inject your token validation Service
    }

    // POST method with token as @PathVariable
    @PostMapping("/{token}")
    public ResponseEntity<?> createPrescriptionWithToken(
            @PathVariable String token,
            @Valid @RequestBody Prescription prescription) {

        // Token validation (Assignment/demo logic)
        if (!tokenService.validateToken(token)) {
            Map<String, String> err = new HashMap<>();
            err.put("error", "Invalid token");
            return ResponseEntity.status(401).body(err);
        }

        Prescription savedPrescription = prescriptionRepository.save(prescription);
        return ResponseEntity.ok(savedPrescription);
    }

    // Baaki CRUD endpoints (GET/PUT/DELETE etc.) pehle ki tarah ho sakte hain
}
